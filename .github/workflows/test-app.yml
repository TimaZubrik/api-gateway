name: start app

on:
  push:
    branches: [test, master]
env:
  DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/api-gateway
  AUTH_DB_NAME: ${{ secrets. AUTH_DB_NAME }}
  USER_DB_NAME: ${{ secrets.USER_DB_NAME }}
  ORDER_DB_NAME: ${{ secrets.ORDER_DB_NAME }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  JWT_SECRET: ${{secrets.JWT_SECRET}}
  JWT_ACCESS_EXP: ${{secrets.JWT_ACCESS_EXP}}
  JWT_REFRESH_EXP: ${{secrets.JWT_REFRESH_EXP}}
  REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
  REDIS_HOST: ${{ secrets.REDIS_HOST }}
jobs:
 build-test:
   runs-on: ubuntu-latest
   steps:
     - name: Code check
       uses: actions/checkout@v4
     - name: Set up JDK 24
       uses: actions/setup-java@v4
       with:
         java-version: '24'
         distribution: 'temurin'
         cache: gradle
     - name: Make Gradle wrapper executable
       run: chmod +x ./gradlew

     - name: Create micro-net network
       run: docker network create micro-net || true

     - name: Run tests locally
       run: |
         ./gradlew clean build \
           -Dspring.profiles.active=test \

 build-and-push-image:
   name: Building Docker image
   needs: build-test
   runs-on: ubuntu-latest
   steps:
     - name: Code check
       uses: actions/checkout@v4
     - name: Log in to Docker Hub
       uses: docker/login-action@v2
       with:
         username: ${{ secrets.DOCKERHUB_USERNAME }}
         password: ${{ secrets.DOCKERHUB_TOKEN }}
     - name: Build and push image
       uses: docker/build-push-action@v4
       with:
         context: .
         file: ./Dockerfile
         push: true
         tags: |
           ${{ env.DOCKERHUB_REPO }}:latest
           ${{ env.DOCKERHUB_REPO }}:${{ github.sha }}