services:
  eureka-server:
    image: ${DOCKERHUB_USER}/service-registry
    ports:
      - "8761:8761"
    networks:
      - micro-net

  auth-service:
    image: ${DOCKERHUB_USER}/auth-service
    depends_on:
      eureka-server:
        condition: service_started
      db-auth:
        condition: service_healthy
      redis-auth:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db-auth:5432/${AUTH_DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_LIQUIBASE_ENABLED: "true"
      SPRING_LIQUIBASE_CHANGE_LOG: classpath:db.changelog/changelog.xml
      JWT_SECRET: ${JWT_SECRET}
      JWT_ACCESS_EXP: ${JWT_ACCESS_EXP}
      JWT_REFRESH_EXP: ${JWT_REFRESH_EXP}
      SPRING_DATA_REDIS_HOST: redis-auth
      SPRING_DATA_REDIS_PORT: "6379"
      SPRING_DATA_REDIS_PASSWORD: ${REDIS_PASSWORD}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    ports:
      - "8085:8085"
    networks:
      - micro-net

  db-auth:
    image: postgres:17.5-alpine3.22
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${AUTH_DB_NAME}
    ports:
      - "5435:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db-auth-data:/var/lib/postgresql/data
    networks:
      - micro-net

  redis-auth:
    image: redis:alpine3.21
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a $${REDIS_PASSWORD} ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - redis-auth-data:/data
    networks:
      - micro-net

  user-service:
    image: ${DOCKERHUB_USER}/user-service
    depends_on:
      eureka-server:
        condition: service_started
      db-user:
        condition: service_healthy
      redis-user:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db-user:5432/${USER_DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_LIQUIBASE_ENABLED: "true"
      SPRING_LIQUIBASE_CHANGE_LOG: classpath:/db/changelog/changelog.xml
      SPRING_DATA_REDIS_HOST: redis-user
      SPRING_DATA_REDIS_PORT: "6379"
      SPRING_DATA_REDIS_PASSWORD: ${REDIS_PASSWORD}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    ports:
      - "8080:8080"
    networks:
      - micro-net

  db-user:
    image: postgres:17.5-alpine3.22
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${USER_DB_NAME}
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db-user-data:/var/lib/postgresql/data
    networks:
      - micro-net

  redis-user:
    image: redis:alpine3.21
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a $${REDIS_PASSWORD} ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - redis-user-data:/data
    networks:
      - micro-net

  order-service:
    image: ${DOCKERHUB_USER}/order-service
    depends_on:
      eureka-server:
        condition: service_started
      db-order:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db-order:5432/${ORDER_DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_LIQUIBASE_ENABLED: "true"
      SPRING_LIQUIBASE_CHANGE-LOG: classpath:/db/changelog/changelog.xml
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    ports:
      - "8081:8081"
    networks:
      - micro-net

  db-order:
    image: postgres:17.5-alpine3.22
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${ORDER_DB_NAME}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db-order-data:/var/lib/postgresql/data
    networks:
      - micro-net

  api-gateway:
    image: api-gateway
    build:
      context: .
    depends_on:
      eureka-server:
        condition: service_started
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    ports:
      - "8090:8090"
    networks:
      - micro-net

networks:
  micro-net:
    external: true
    driver: bridge

volumes:
  db-auth-data:
  redis-auth-data:
  db-user-data:
  redis-user-data:
  db-order-data:
